{"version":3,"file":"static/js/250.b795f238.chunk.js","mappings":"6OAYA,MAmEA,EAnE2BA,KAAO,IAADC,EAAAC,EAAAC,EAC/B,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,MAgBjC,OAdAC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,MAAM,yCACvBC,QAAqBF,EAASG,OACpCP,EAAQM,EACV,CAAE,MAAOE,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAGFE,EAAW,GACV,IAEEX,GAKHY,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAACC,UAAWC,EAAAA,EAAMJ,UAC/BD,EAAAA,EAAAA,MAACM,EAAAA,EAAK,CAAAL,SAAA,EACJC,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAAAN,UACRD,EAAAA,EAAAA,MAACQ,EAAAA,EAAQ,CAAAP,SAAA,EACPC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,SAAC,UACXC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,SAAC,gBAGfC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAAAT,SACPb,EAAKuB,gBAAgBC,KAAKC,IACzBX,EAAAA,EAAAA,KAACY,EAAAA,SAAc,CAAAb,UACbD,EAAAA,EAAAA,MAACQ,EAAAA,EAAQ,CAAAP,SAAA,EACPC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,SAAEY,EAAME,QAClBb,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,SAAEe,KAAKC,UAAUJ,EAAMK,aAHhBL,EAAME,gBAYnCf,EAAAA,EAAAA,MAAA,OAAKmB,MAAO,CAAEC,UAAW,QAASnB,SAAA,EAChCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAAsB,IAAoE,QAAnEhB,EAACG,EAAKuB,gBAAgBU,MAAKR,GAAwB,kBAAfA,EAAME,cAAyB,IAAA9B,OAAA,EAAlEA,EAAoEiC,MAAMI,iBAE5GtB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,IAAoE,QAAnEf,EAACE,EAAKuB,gBAAgBU,MAAKR,GAAwB,kBAAfA,EAAME,cAAyB,IAAA7B,OAAA,EAAlEA,EAAoEgC,MAAMK,aAIxGrB,EAAAA,EAAAA,KAAA,OAAKiB,MAAO,CAAEC,UAAW,QAASnB,SACqC,QADrCd,EAC/BC,EAAKuB,gBAAgBU,MAAKR,GAAwB,oBAAfA,EAAME,cAA2B,IAAA5B,OAAA,EAApEA,EAAsE+B,MAAMN,KAAIY,IAC/ExB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAACyB,EAAAA,EAAU,CAACC,QAAQ,YAAYC,MAAM,cAAa1B,SAAA,CAChDuB,EAAKT,KAAK,QAEbb,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CAACC,QAAQ,QAAOzB,SAAEuB,EAAKN,UAJ1BM,EAAKT,cArCdb,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cA6CJ,EC/DV,EATsB2B,KAElB5B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAClB,EAAkB,M","sources":["components/dashboard/NodeParameter.js","views/NodeParameter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Typography,\r\n} from '@mui/material';\r\n\r\nconst NodeParameterTable = () => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/node-parameter/');\r\n        const responseData = await response.json();\r\n        setData(responseData);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (!data) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Value</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.node_parameters.map((param) => (\r\n              <React.Fragment key={param.name}>\r\n                <TableRow>\r\n                  <TableCell>{param.name}</TableCell>\r\n                  <TableCell>{JSON.stringify(param.value)}</TableCell>\r\n                </TableRow>\r\n              </React.Fragment>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {/* Display edge_node_id and group_id values below the table */}\r\n      <div style={{ marginTop: '20px' }}>\r\n        <strong>edge_node_id:</strong> {data.node_parameters.find(param => param.name === 'spb_parameter')?.value.edge_node_id}\r\n      </div>\r\n      <div>\r\n        <strong>group_id:</strong> {data.node_parameters.find(param => param.name === 'spb_parameter')?.value.group_id}\r\n      </div>\r\n\r\n      {/* Display node_attributes values below the table */}\r\n      <div style={{ marginTop: '20px' }}>\r\n        {data.node_parameters.find(param => param.name === 'node_attributes')?.value.map(attr => (\r\n          <div key={attr.name}>\r\n            <Typography variant=\"subtitle1\" color=\"textPrimary\">\r\n              {attr.name}:\r\n            </Typography>\r\n            <Typography variant=\"body1\">{attr.value}</Typography>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NodeParameterTable;\r\n","import React from 'react'\r\nimport NodeParameterTable from '../components/dashboard/NodeParameter'\r\n\r\nconst NodeParameter = () => {\r\n  return (\r\n    <div>\r\n      <h1>NodeParameter</h1>\r\n      <NodeParameterTable />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NodeParameter"],"names":["NodeParameterTable","_data$node_parameters","_data$node_parameters2","_data$node_parameters3","data","setData","useState","useEffect","async","response","fetch","responseData","json","error","console","fetchData","_jsxs","children","_jsx","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","node_parameters","map","param","React","name","JSON","stringify","value","style","marginTop","find","edge_node_id","group_id","attr","Typography","variant","color","NodeParameter"],"sourceRoot":""}