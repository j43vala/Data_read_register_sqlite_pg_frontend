{"version":3,"file":"static/js/544.fc0a3587.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js","components/dashboard/CreateDeviceAndRegister.js","views/CreateDeviceAndRegister.js"],"sourcesContent":["import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","// DeviceForm.js\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\n\nconst backendUrl = 'http://localhost:5000';\n\nconst DeviceForm = () => {\n  const [deviceName, setDeviceName] = useState('');\n  const [slaveId, setSlaveId] = useState('');\n  const [address, setAddress] = useState('');\n  const [columnName, setColumnName] = useState('');\n  const [data_type, setType] = useState('');\n  const [deviceId, setDeviceId] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const createDevice = () => {\n    if (deviceName && slaveId) {\n      const newDevice = { name: deviceName, slave_id: slaveId };\n\n      fetch(`${backendUrl}/devices/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newDevice),\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(() => {\n          setSuccessMessage('Device created successfully!');\n          setErrorMessage('');\n          clearDeviceForm();\n        })\n        .catch((error) => {\n          console.error('Error creating device:', error);\n          setErrorMessage('Error creating device. Please try again.');\n        });\n    } else {\n      setErrorMessage('Both device name and slave ID are required');\n    }\n  };\n\n  const registerDevice = () => {\n    if (!deviceId) {\n      setErrorMessage('Device ID is required!');\n      return;\n    }\n\n    const newRegister = { address, parameter_name: columnName, data_type, device_id: deviceId };\n\n    fetch(`${backendUrl}/register/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newRegister),\n    })\n      .then(() => {\n        setSuccessMessage('New register created successfully!');\n        setErrorMessage('');\n        clearRegisterForm();\n      })\n      .catch((error) => {\n        console.error('Error creating a new register:', error);\n        setErrorMessage('Error creating a new register. Please try again.');\n      });\n  };\n\n  const clearDeviceForm = () => {\n    setDeviceName('');\n    setSlaveId('');\n  };\n\n  const clearRegisterForm = () => {\n    setAddress('');\n    setColumnName('');\n    setType('');\n    setDeviceId('');\n  };\n\n  return (\n    <Container>\n      <Box mt={3}>\n        <h2>Create Device</h2>\n        <form>\n          <TextField\n            label=\"Device Name\"\n            variant=\"outlined\"\n            fullWidth\n            value={deviceName}\n            onChange={(e) => setDeviceName(e.target.value)}\n          />\n          <TextField\n            label=\"Slave ID\"\n            variant=\"outlined\"\n            fullWidth\n            value={slaveId}\n            onChange={(e) => setSlaveId(e.target.value)}\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={createDevice}>\n            Create Device\n          </Button>\n        </form>\n      </Box>\n\n      <Box mt={3}>\n        <h2>Register Device</h2>\n        <form>\n          <TextField\n            label=\"Address\"\n            variant=\"outlined\"\n            fullWidth\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n          />\n          <TextField\n            label=\"Parameter Name\"\n            variant=\"outlined\"\n            fullWidth\n            value={columnName}\n            onChange={(e) => setColumnName(e.target.value)}\n          />\n          <TextField\n            label=\"Type\"\n            variant=\"outlined\"\n            fullWidth\n            value={data_type}\n            onChange={(e) => setType(e.target.value)}\n          />\n          <TextField\n            label=\"Device ID\"\n            variant=\"outlined\"\n            fullWidth\n            value={deviceId}\n            onChange={(e) => setDeviceId(e.target.value)}\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={registerDevice}>\n            Register Device\n          </Button>\n        </form>\n      </Box>\n\n      {successMessage && (\n        <Alert severity=\"success\" onClose={() => setSuccessMessage('')}>\n          {successMessage}\n        </Alert>\n      )}\n\n      {errorMessage && (\n        <Alert severity=\"error\" onClose={() => setErrorMessage('')}>\n          {errorMessage}\n        </Alert>\n      )}\n    </Container>\n  );\n};\n\nexport default DeviceForm;\n","import React from 'react'\nimport DeviceForm from '../components/dashboard/CreateDeviceAndRegister'\n\nconst CreateDeviceAndRegister = () => {\n  return (\n    <div>\n        <h1>CreateDeviceAndRegister</h1>\n        <DeviceForm />\n    </div>\n  )\n}\n\nexport default CreateDeviceAndRegister"],"names":["createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","Container","options","arguments","length","undefined","createStyledComponent","useThemeProps","componentName","ContainerRoot","_ref","theme","_extends","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref3","Math","max","xs","React","ref","className","component","other","_objectWithoutPropertiesLoose","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","_jsx","as","clsx","createContainer","styled","Box","themeId","defaultClassName","generateClassName","BoxRoot","shouldForwardProp","prop","styleFunctionSx","useTheme","_extendSxProp","extendSxProp","createBox","THEME_ID","ClassNameGenerator","generate","backendUrl","DeviceForm","deviceName","setDeviceName","useState","slaveId","setSlaveId","address","setAddress","columnName","setColumnName","data_type","setType","deviceId","setDeviceId","successMessage","setSuccessMessage","errorMessage","setErrorMessage","clearDeviceForm","clearRegisterForm","_jsxs","children","mt","TextField","label","variant","fullWidth","onChange","e","target","Button","color","onClick","createDevice","newDevice","slave_id","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","catch","error","console","registerDevice","newRegister","parameter_name","device_id","Alert","severity","onClose","CreateDeviceAndRegister"],"sourceRoot":""}