{"version":3,"file":"static/js/443.8b2773e1.chunk.js","mappings":"sPAaA,MAAMA,EAAcC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAC3BE,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAW,EAAGC,MAAO,CAAEC,QAAS,OAAQC,UAAW,OAAQC,WAAY,SAAUC,SAAA,EACtFC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIH,SAAC,WACzBC,EAAAA,EAAAA,KAAA,MAAAD,SACGR,EAAKY,KAAI,CAACC,EAAKC,KACdL,EAAAA,EAAAA,KAAA,MAAAD,SAAiBK,GAARC,SAGP,EAoEV,EAjEsBC,KACpB,MAAOC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,KAC9CC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,KAC9ClB,EAAMqB,IAAWH,EAAAA,EAAAA,UAAS,IA4BjC,OACEjB,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEkB,QAAS,OAAQC,cAAe,SAAUC,WAAY,cAAehB,SAAA,EACjFP,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEkB,QAAS,OAAQE,WAAY,UAAWhB,SAAA,EACpDP,EAAAA,EAAAA,MAACwB,EAAAA,EAAW,CAACC,WAAS,EAACtB,MAAO,CAAEuB,MAAO,QAASC,YAAa,QAASpB,SAAA,EACpEC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACC,GAAG,YAAWtB,SAAC,SAC3BP,EAAAA,EAAAA,MAAC8B,EAAAA,EAAM,CACLC,QAAQ,YACRF,GAAG,aACHG,MAAOjB,EACPkB,MAAM,MACNC,SApCYC,IACpBnB,EAAkBmB,EAAMC,OAAOJ,MAAM,EAmCNzB,SAAA,EAEvBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAQ,CAACL,MAAM,OAAMzB,SAAC,UACvBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAQ,CAACL,MAAM,QAAOzB,SAAC,iBAG5BC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CACRC,KAAK,QACLN,MAAM,SACND,MAAOd,EACPgB,SA1C4BC,IAClC,MAAMH,EAAQG,EAAMC,OAAOJ,MAC3Bb,EAAkBa,EAAM,EAyClB7B,MAAO,CAAGwB,YAAa,WAEzBnB,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACC,QAxCUC,UACtB,IACE,MAAMC,EAAcC,SAAS1B,EAAgB,IAE7C,GAAI2B,MAAMF,GAGR,YADAG,QAAQC,MAAM,oCAAqC7B,GAIrD,MAAM8B,QAAiBC,EAAAA,EAAMC,IAAI,uBAADC,OAAwBpC,EAAc,qBAAAoC,OAAoBR,IAC1FvB,EAAQ4B,EAASI,KAAKrD,KACxB,CAAE,MAAOgD,GACPD,QAAQC,MAAM,uBAAwBA,EACxC,GA0BsCrC,QAAQ,YAAY2C,MAAM,UAAS9C,SAAE,aAMxER,EAAKuD,OAAS,IAAK9C,EAAAA,EAAAA,KAACX,EAAW,CAACE,KAAMA,EAAMI,MAAO,CAAEE,UAAW,YAC7D,ECzEV,EATgBkD,KAEZ/C,EAAAA,EAAAA,KAAA,OAAAD,UAEEC,EAAAA,EAAAA,KAACM,EAAa,K","sources":["components/dashboard/Logs.js","views/Command.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  MenuItem,\n  Select,\n  FormControl,\n  InputLabel,\n  Button,\n  Paper,\n  Typography,\n  TextField,\n} from '@mui/material';\nimport axios from 'axios';\n\nconst LogsDisplay = ({ logs }) => (\n  <Paper elevation={3} style={{ padding: '16px', marginTop: '16px', background: 'white' }}>\n    <Typography variant=\"h5\">Logs:</Typography>\n    <ul>\n      {logs.map((log, index) => (\n        <li key={index}>{log}</li>\n      ))}\n    </ul>\n  </Paper>\n);\n\nconst InfoErrorLogs = () => {\n  const [selectedOption, setSelectedOption] = useState('');\n  const [numOccurrences, setNumOccurrences] = useState('');\n  const [logs, setLogs] = useState([]);\n\n  const handleChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  const handleNumOccurrencesChange = (event) => {\n    const value = event.target.value;\n    setNumOccurrences(value);\n  };\n\n  const handleFetchLogs = async () => {\n    try {\n      const occurrences = parseInt(numOccurrences, 10);\n\n      if (isNaN(occurrences)) {\n        // Handle the case where numOccurrences is not a valid integer\n        console.error('Invalid value for numOccurrences:', numOccurrences);\n        return;\n      }\n\n      const response = await axios.get(`/logs/logs?log_type=${selectedOption}&num_occurrences=${occurrences}`);\n      setLogs(response.data.logs);\n    } catch (error) {\n      console.error('Error fetching logs:', error);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <FormControl fullWidth style={{ width: '130px', marginRight: '10px' }}>\n          <InputLabel id=\"cmd-label\">CMD</InputLabel>\n          <Select\n            labelId=\"cmd-label\"\n            id=\"cmd-select\"\n            value={selectedOption}\n            label=\"CMD\"\n            onChange={handleChange}\n          >\n            <MenuItem value=\"info\">Info</MenuItem>\n            <MenuItem value=\"error\">Error</MenuItem>\n          </Select>\n        </FormControl>\n        <TextField\n          type=\"input\"\n          label=\"Number\"\n          value={numOccurrences}\n          onChange={handleNumOccurrencesChange}\n          style={{  marginRight: '10px' }}\n        />\n        <Button onClick={handleFetchLogs} variant=\"contained\" color=\"primary\" >\n          Fetch \n        </Button>\n      </div>\n\n      {/* Display logs */}\n      {logs.length > 0 && <LogsDisplay logs={logs} style={{ marginTop: '16px' }} />}\n    </div>\n  );\n};\n\nexport default InfoErrorLogs;\n\n","import React from 'react'\nimport InfoErrorLogs from '../components/dashboard/Logs'\n\nconst Command = () => {\n  return (\n    <div>\n      {/* <h1>Logs</h1> */}\n      <InfoErrorLogs />\n    </div>\n  )\n}\n\nexport default Command;"],"names":["LogsDisplay","_ref","logs","_jsxs","Paper","elevation","style","padding","marginTop","background","children","_jsx","Typography","variant","map","log","index","InfoErrorLogs","selectedOption","setSelectedOption","useState","numOccurrences","setNumOccurrences","setLogs","display","flexDirection","alignItems","FormControl","fullWidth","width","marginRight","InputLabel","id","Select","labelId","value","label","onChange","event","target","MenuItem","TextField","type","Button","onClick","async","occurrences","parseInt","isNaN","console","error","response","axios","get","concat","data","color","length","Command"],"sourceRoot":""}