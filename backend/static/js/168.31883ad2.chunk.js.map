{"version":3,"file":"static/js/168.31883ad2.chunk.js","mappings":"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","sources":["components/dashboard/CreateDeviceAndRegister.js","views/CreateDeviceAndRegister.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/@mui/system/node_modules/clsx/dist/clsx.mjs"],"sourcesContent":["// DeviceForm.js\r\nimport React, { useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nconst backendUrl = 'http://localhost:5000';\r\n\r\nconst DeviceForm = () => {\r\n  const [deviceName, setDeviceName] = useState('');\r\n  const [slaveId, setSlaveId] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [columnName, setColumnName] = useState('');\r\n  const [data_type, setType] = useState('');\r\n  const [deviceId, setDeviceId] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const createDevice = () => {\r\n    if (deviceName && slaveId) {\r\n      const newDevice = { name: deviceName, slave_id: slaveId };\r\n\r\n      fetch(`${backendUrl}/devices/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newDevice),\r\n      })\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(() => {\r\n          setSuccessMessage('Device created successfully!');\r\n          setErrorMessage('');\r\n          clearDeviceForm();\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error creating device:', error);\r\n          setErrorMessage('Error creating device. Please try again.');\r\n        });\r\n    } else {\r\n      setErrorMessage('Both device name and slave ID are required');\r\n    }\r\n  };\r\n\r\n  const registerDevice = () => {\r\n    if (!deviceId) {\r\n      setErrorMessage('Device ID is required!');\r\n      return;\r\n    }\r\n\r\n    const newRegister = { address, parameter_name: columnName, data_type, device_id: deviceId };\r\n\r\n    fetch(`${backendUrl}/register/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newRegister),\r\n    })\r\n      .then(() => {\r\n        setSuccessMessage('New register created successfully!');\r\n        setErrorMessage('');\r\n        clearRegisterForm();\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error creating a new register:', error);\r\n        setErrorMessage('Error creating a new register. Please try again.');\r\n      });\r\n  };\r\n\r\n  const clearDeviceForm = () => {\r\n    setDeviceName('');\r\n    setSlaveId('');\r\n  };\r\n\r\n  const clearRegisterForm = () => {\r\n    setAddress('');\r\n    setColumnName('');\r\n    setType('');\r\n    setDeviceId('');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box mt={3}>\r\n        <h2>Create Device</h2>\r\n        <form>\r\n          <TextField\r\n            label=\"Device Name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={deviceName}\r\n            onChange={(e) => setDeviceName(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Slave ID\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={slaveId}\r\n            onChange={(e) => setSlaveId(e.target.value)}\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={createDevice}>\r\n            Create Device\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n\r\n      <Box mt={3}>\r\n        <h2>Register Device</h2>\r\n        <form>\r\n          <TextField\r\n            label=\"Address\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Parameter Name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={columnName}\r\n            onChange={(e) => setColumnName(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Type\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={data_type}\r\n            onChange={(e) => setType(e.target.value)}\r\n          />\r\n          <TextField\r\n            label=\"Device ID\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={deviceId}\r\n            onChange={(e) => setDeviceId(e.target.value)}\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={registerDevice}>\r\n            Register Device\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n\r\n      {successMessage && (\r\n        <Alert severity=\"success\" onClose={() => setSuccessMessage('')}>\r\n          {successMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      {errorMessage && (\r\n        <Alert severity=\"error\" onClose={() => setErrorMessage('')}>\r\n          {errorMessage}\r\n        </Alert>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DeviceForm;\r\n","import React from 'react'\r\nimport DeviceForm from '../components/dashboard/CreateDeviceAndRegister'\r\n\r\nconst CreateDeviceAndRegister = () => {\r\n  return (\r\n    <div>\r\n        <h1>CreateDeviceAndRegister</h1>\r\n        <DeviceForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateDeviceAndRegister","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":["backendUrl","DeviceForm","deviceName","setDeviceName","useState","slaveId","setSlaveId","address","setAddress","columnName","setColumnName","data_type","setType","deviceId","setDeviceId","successMessage","setSuccessMessage","errorMessage","setErrorMessage","clearDeviceForm","clearRegisterForm","_jsxs","Container","children","Box","mt","_jsx","TextField","label","variant","fullWidth","value","onChange","e","target","Button","color","onClick","createDevice","newDevice","name","slave_id","fetch","concat","method","headers","body","JSON","stringify","then","response","ok","Error","json","catch","error","console","registerDevice","newRegister","parameter_name","device_id","Alert","severity","onClose","CreateDeviceAndRegister","_excluded","generateUtilityClasses","defaultTheme","createTheme","options","arguments","length","undefined","themeId","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","className","component","other","_objectWithoutPropertiesLoose","_extends","as","clsx","createBox","THEME_ID","boxClasses","root","ClassNameGenerator","generate","createStyled","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","useThemePropsSystem","createStyledComponent","useThemeProps","componentName","ContainerRoot","_ref","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref3","Math","max","xs","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","createContainer","r","t","f","n","Array","isArray","o"],"sourceRoot":""}